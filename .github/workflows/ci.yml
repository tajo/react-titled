name: Node.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  workflow_dispatch:

jobs:
  lint:
    name: Linter check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: yarn install --frozen-lockfile
      - run: yarn lint

  build:
    name: Build check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: yarn install --frozen-lockfile
      - run: yarn build

  examples:
    strategy:
      matrix:
        react-version:
          - 16.8.0
          - latest
    name: Build example with react@${{ matrix.react-version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: yarn install --frozen-lockfile
      - run: yarn build:example
        if: matrix.react-version == 'latest'
      - run: yarn build:example:legacy
        if: matrix.react-version == '16.8.0'

  test:
    strategy:
      matrix:
        react-version:
          - 16.8.0
          - latest
    runs-on: ubuntu-latest
    name: Test with react@${{ matrix.react-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - run: yarn install --frozen-lockfile
      - run: yarn add --dev react@${{ matrix.react-version }} react-dom@${{ matrix.react-version }} @testing-library/react@12
        if: matrix.react-version != 'latest'
      - run: yarn test
        if: matrix.react-version == 'latest'
      - run: yarn test-legacy
        if: matrix.react-version == '16.8.0'
